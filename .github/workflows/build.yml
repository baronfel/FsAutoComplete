name: Build

on: [push, pull_request]

jobs:
  build-and-test:
    env:
      TEST_TIMEOUT_MINUTES: 20
    timeout-minutes: 20 # we have a locking issue, so cap the runs at ~20m to account for varying build times, etc
    strategy:
      matrix:
        os: [windows-2019, macos-10.15, ubuntu-20.04]
      fail-fast: false # we have timing issues on some OS, so we want them all to run

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v1
    - name: Fix windows pagefile issues
      uses: al-cheb/configure-pagefile-action@v1.2
      if: ${{ matrix.os == 'windows-2019' }}
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v2
      with:
        global-json-file: global.json
    - name: Restore tools
      run: dotnet tool restore
    - name: Run Build
      run: dotnet fake build -t Build

    - name: Run and report tests
      run: dotnet test --no-restore -c Release --no-build --logger GitHubActions --logger:"junit;LogFilePath=test-result.xml;MethodFormat=full" /p:AltCover=true /p:AltCoverAssemblyExcludeFilter="System.Reactive|FSharp.Compiler.Service|Ionide.ProjInfo|FSharp.Analyzers|Analyzer|Humanizer|FSharp.Core|Dapper|FSharp.DependencyManager"
      working-directory: test/FsAutoComplete.Tests.Lsp
      env:
        TEST_TIMEOUT_MINUTES: 10

    - name: Upload Test Results
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: Test Results (.NET ${{ matrix.os }})
        path: test/FsAutoComplete.Tests.Lsp/test-result.xml
        if-no-files-found: fail


  publish-test-results:
    name: "Publish Test Results"
    needs: build-and-test
    runs-on: ubuntu-latest
    permissions:
      checks: write

      # only needed unless run with comment_mode: off
      pull-requests: write
    if: always()

    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          path: artifacts

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        with:
          files: "artifacts/**/*.xml"
          pull_request_build: commit
          report_individual_runs: true
